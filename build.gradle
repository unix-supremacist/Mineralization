plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
	maven {
		url "https://maven.terraformersmc.com"
		content { includeGroup "com.terraformersmc" }
	}
	maven {
		url = uri("https://storage.googleapis.com/devan-maven/")
	}
	maven {
		url "https://maven.shedaniel.me"
		content {
			includeGroup "me.shedaniel.cloth.api"
			includeGroup "me.sargunvohra.mcmods"
			includeGroup "me.shedaniel.cloth"
			includeGroup "me.shedaniel"
			includeGroup "dev.architectury"
		}
	}
	maven {
		url 'https://jitpack.io'
		content {
			includeGroup "com.github.Draylar"
			includeGroup "com.github.Draylar.omega-config"
		}
	}
	maven {
		url = "https://maven.jamieswhiteshirt.com/libs-release/"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	flatDir { dirs 'libs' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	//modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
	include modImplementation("net.devtech:arrp:0.5.7"){ exclude(group: "net.fabricmc.fabric-api") }
	modApi "teamreborn:energy:2.+"
	modImplementation "TechReborn:TechReborn-1.18:5.+"
	include modImplementation("com.github.Draylar:magna:1.7.0-1.18"){
		exclude(group: "net.fabricmc.fabric-api")
		exclude(group: "com.terraformersmc")
	}

	//replace with a felt api later
	//include modImplementation("com.github.Draylar:magna:${project.magna_version}"){
	//	exclude(group: "net.fabricmc.fabric-api")
	//	exclude(group: "com.terraformersmc")
	//}
	include modImplementation("io.github.feltmc:felt-ore-feature-api-v1:1.0.0"){}
	include modImplementation("io.github.feltmc:felt-splash-api:1.0.0"){}
	include modImplementation("io.github.feltmc:felt-tool-api:1.0.0"){}
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present. If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archives_base_name}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
